// Code generated by protoc-gen-go-http-server. DO NOT EDIT.
// source: FleetManager/FleetManager.proto

package FleetManager

import (
	"net/http"
	"text/template"

	"gitlab.ozon.ru/platform/protobuf/protoc-gen-go-http-server/swagger"
	"gitlab.ozon.ru/platform/protobuf/protoc-gen-go-http-server/types"
)

var swaggerOptions types.SwaggerOptions

func SetSwaggerOptions(opts types.SwaggerOptions) {
	swaggerOptions = opts
}

var SwaggerJSONHandler = http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/javascript")
	w.WriteHeader(http.StatusOK)
	swaggerJSON.Execute(w, swaggerOptions)
})

var SwaggerUIHandler = swaggerui.NewHTTPHandler()

var swaggerJSON = template.Must(template.New("swagger.json").Parse(`{
  "swagger": "2.0",
  "info": {
    "title": "FleetManager/FleetManager.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/fleet": {
      "get": {
        "operationId": "GetFleet",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetFleetResp"
            }
          }
        },
        "tags": [
          "FleetManager"
        ]
      }
    },
    "/zone/{lat}/{long}": {
      "get": {
        "operationId": "GetZone",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetZoneResp"
            }
          }
        },
        "parameters": [
          {
            "name": "lat",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "long",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "tags": [
          "FleetManager"
        ]
      }
    },
    "/zones": {
      "get": {
        "operationId": "GetZones",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetZonesResp"
            }
          }
        },
        "tags": [
          "FleetManager"
        ]
      }
    }
  },
  "definitions": {
    "Courier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "weight": {
          "type": "number",
          "format": "double"
        },
        "volume": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Fleet": {
      "type": "object",
      "properties": {
        "zone_id": {
          "type": "integer",
          "format": "int32"
        },
        "fleet": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Courier"
          }
        }
      }
    },
    "GetFleetResp": {
      "type": "object",
      "properties": {
        "fleet": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Fleet"
          }
        }
      }
    },
    "GetZoneResp": {
      "type": "object",
      "properties": {
        "zone_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetZonesResp": {
      "type": "object",
      "properties": {
        "zones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Zone"
          }
        }
      }
    },
    "Zone": {
      "type": "object",
      "properties": {
        "zone_id": {
          "type": "integer",
          "format": "int32"
        },
        "geoJson": {
          "type": "string"
        }
      }
    }
  }
}
`))
