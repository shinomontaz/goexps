// Code generated by protoc-gen-go-http-server.
// source: FleetManager/FleetManager.proto

package FleetManager

import (
	"context"

	"github.com/shinomontaz/goexps/FleetManager/model"
)

func init() {
	defaultHTTPServerOptions.srv = &ServerImpl{}
}

type ServerImpl struct{}

func (s *ServerImpl) GetZone(ctx context.Context, req *GetZoneReq) (*GetZoneResp, error) {

	// dump implementaion here

	return &GetZoneResp{}, nil
}

func (s *ServerImpl) GetZones(ctx context.Context, req *Empty) (*GetZonesResp, error) {
	coreZones := model.GetZones()

	zones := make([]*Zone, 0, len(coreZones))
	for _, w := range coreZones {
		zones = append(zones, &Zone{
			ZoneId:  w.ID,
			GeoJson: w.GeoJson,
		})
	}

	return &GetZonesResp{Zones: zones}, nil
}

func (s *ServerImpl) GetFleet(ctx context.Context, req *Empty) (*GetFleetResp, error) {

	coreZones := model.GetFleet()

	fleet := make([]*Fleet, 0, len(coreZones))
	for _, w := range coreZones {

		fleetList := make([]*Courier, 0, len(w.Fleet))

		for _, ww := range w.Fleet {
			ww := *ww
			newCourier := Courier(ww)
			fleetList = append(fleetList, &newCourier)
		}

		fleet = append(fleet, &Fleet{
			ZoneId: w.ID,
			Fleet:  fleetList,
		})
	}

	return &GetFleetResp{Fleet: fleet}, nil
}
